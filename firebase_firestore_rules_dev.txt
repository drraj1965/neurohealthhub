// Development-mode Firestore Rules (less restrictive)
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to all documents for authenticated users
    match /{document=**} {
      allow read: if request.auth != null;
      
      // Basic write access for authenticated users with some minimal validation
      allow write: if request.auth != null && 
                    request.resource.data.keys().hasAll(['createdAt']) &&
                    request.resource.data.createdAt is timestamp;
    }
    
    // Still be strict about user data - users should only write their own data
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // User's questions
      match /my_questions/{questionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Doctors collection - only doctors can write their own data
    match /doctors/{doctorId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                   (request.auth.uid == doctorId || 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      
      // Doctor's questions from users
      match /user_questions/{questionId} {
        allow read, write: if request.auth != null;
      }
    }
  }
}