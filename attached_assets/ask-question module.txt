The app opens with a register page; the registration and subsequent authentication is done in firebase
user registers with email and password, adds his first name and last name, agrees to terms and conditions, and clicks register; the password field has constraints - minimum characters, upper case, lower case and special characters; there is an eyeball icon allowing user to confirm his password visually if required;
The user credentials are stored in my firestore database project neurohealthhub,in the 'users' collection;
I am registered as an admin with my credentials in the 'doctors' collection; I have added two other admins in the 'doctors' collections;
Once registered, the user logs in with this credentials and reaches the user-dashboard, which has seven cards - latest-updates, health-tracker, ask-question, my-questions, public-questions, medical-articles, and medical-videos;
When the admin logs in, he is taken to the admin-dashboard, this has four cards as well - latest-updates, answer-questions, public-questions, create-articles, create-medical-videos, and health-tracker;
In the ask-question page, user can email questions to an admin; in the page, there is an ask-question form which has the fields: doctor-select, question-type, title, and textbox, with a submit button;
The doctor-select is a dropdown menu with the names of the three admins - user has to mandatorily select one of these to proceed;
The question-type field is also a dropdown menu with three items - 'Question regarding my health condition'; 'Question regarding my medicines; 'Others'; user has to select one of these mandatorily to proceed;
The title field is a text box in which user enters free text to give an idea about the question in his own words;
The textbox contains text for the question which user enters using typing or speech-to-text; this has to be compatible with all devices and browsers, including iOS devices and android devices; the speech to text has to allow user to pause and add text in the text box without much hassle;
The user has the option to attach pdf and word documents, images, audio and videos or links to the question;
When user clicks the submit question button, the question is stored in the database in both his document as well as the document of the doctor he has selected; in the user's document there is a subcollection called 'my_questions' and in the doctors' document there is a subcollection called 'user_questions' and the questions are stored in both of these with an interconnection;
When user submits the question, an email is sent immediately to notify the admin doctor, using my SendGrid credentials, and a WhatsApp notification is sent to the admin doctor using my Twilio credentials;
In the page below the ask-question form there is space for 'Today's Questions'; when user submits a question, it instantly appears in a list under the heading 'Today's Questions. 
In the sidebar in the ask-question page there are links to the 'Dashboard', 'My Questions' , 'Medical Articles', and 'Medical Videos';
The 'Dashboard link takes user back to the dashboard'
The 'My Questions' link takes the user to his 'my-questions' page; in this page are provided in a list display all the questions submitted by him in the past, sorted from newest to the oldest, with Today's question on top; he can sort and filter them by doctor, by time period, answered / unanswered and by keywords;
When a doctor responds to a question, the answers appear below the respective question; user can then submit follow-up questions or responses, and these are in the form of textboxes in which he can enter text with typing or speech to text, as well as attach documents, images, videos, audios, and links with the same functionalities as the original ask-question form, with the difference that this is now a child-question; in the database, this is stored along with the original question but it has the added field of being a child-question and being linked to a parent-question with the parent-question id
The user can navigate to the ask-question page from the my-questions page, as well as back and to the dashboard; he can use another card in the dashboard to navigate to the my-questions page directly;
The admin can navigate to the answer-questions page where he can see all the questions posted to him, arranged by default from newest to oldest; he can sort and filter them according to user, time period, answered/unanswered, and keywords;
In the answer-questions page, admin / doctor can answer a question; when he clicks a question, a textbox opens in which he can type text or add using speech-to-text - he can do this from any browser and on any device, including iOS and android devices as well as windows computers; he can attach documents, images, videos, and audios as well as links; when admin doctor clicks submit response button, an email goes to the user and the question is saved in the database along with the question in the 'my-questions' subcollection of the user as well as the 'doctor_questions' subcollection of the admin doctor; 
The user can ask follow up questions or answer questions asked by the doctor, and each of these text boxes have the same functionalities as the original question (speech-to-text, attachments, submit button) but these are all child questions and the sequence in which these responses are submitted are maintained using the timestamp, so that the conversations are understandable. 
At any point a user or an admin can make a question, its response and any one or many of the follow up responses in the conversations public - when this is done, the question with or without its responses appear in a public-questions page which also has a link using a card in the respective dashboards (user-dashboard and admin-dashboard); 